#!/usr/bin/perl
use strict;
use warnings;

use Music::Client::MPD;
use Music::LastFM;
use Data::Dumper;
use List::Util qw(min);

my $lfm = Music::LastFM->new(
    config_filename => 'tmp/options.conf',
    username        => 'riemann42'
);

my $client = Music::Client::MPD->new(
    {   host => 'themusic',
        host => "themusic",
        port => "6600",
        root => "/mnt/media/music/MP3s",
    }
);

my $current_track;
my $current_status_ref;

sub update_info {
    my $status_ref = $client->get_info();
    my $time       = time;
    my %options = ( play_status => $status_ref->{state} );

    if ( !( $status_ref->{state} eq 'stop') ) {
        ( $status_ref->{so_far}, $status_ref->{song_duration} ) =
            $status_ref->{'time'}
            ? ( split( /:/, $status_ref->{'time'} ) )
            : ( 0, 0 );

        if (   ( !defined $current_track ) 
            || (!( $current_track->id eq $status_ref->{Id}))) { 

            $current_track = $lfm->new_track(
                name   => $status_ref->{Title},
                artist => $status_ref->{Artist},
                id     => $status_ref->{Id},
                duration => $status_ref->{song_duration},
            );
        }
        $options{track} = $current_track;
        $options{current_time} = $status_ref->{so_far};
    }
    else {
        $current_track = undef;
    }
    $lfm->monitor_playback(%options);
    $current_status_ref = $status_ref;
}

sub monitor_mpd {
    while (1) {
        update_info();
        print STDERR $current_status_ref->{state}, " ",
            exists$current_status_ref->{'time'} ?
            $current_status_ref->{'time'} : "" , " ",
            exists $current_status_ref->{song_duration} ?
            $current_status_ref->{song_duration} : "", "\r";

        sleep 1;
    }
}

monitor_mpd();

